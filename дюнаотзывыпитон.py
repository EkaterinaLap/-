# -*- coding: utf-8 -*-
"""Untitled17.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QUeqyt0UBL-_d-_0jC2exO6qFqolbmir
"""

import pandas as pd
import nltk
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords
from nltk.stem import WordNetLemmatizer
import string
import matplotlib.pyplot as plt

# Загрузка NLTK ресурсов для русского языка
nltk.download('punkt')
nltk.download('stopwords')
nltk.download('wordnet')

# Функция для предобработки текста
def preprocess_text(text):
    # Токенизация
    tokens = word_tokenize(text.lower())

    # Удаление пунктуации
    tokens = [word for word in tokens if word.isalnum()]

    # Удаление стоп-слов
    stop_words = set(stopwords.words('russian'))
    tokens = [word for word in tokens if word not in stop_words]

    # Лемматизация
    lemmatizer = WordNetLemmatizer()
    tokens = [lemmatizer.lemmatize(word) for word in tokens]

    # Приведение к одной строке
    return ' '.join(tokens)

# Функция для чтения данных из файла
def read_reviews_from_txt(filename):
    with open(filename, 'r', encoding='utf-8') as file:
        reviews = file.readlines()
    return [review.strip() for review in reviews]

# Путь к файлу с отзывами
input_file = 'text.txt'  # Предположим, что данные хранятся в текстовом файле

# Чтение отзывов из файла
reviews = read_reviews_from_txt(input_file)

# Предобработка отзывов
preprocessed_reviews = [preprocess_text(review) for review in reviews]

# Сохранение предобработанных отзывов в файл
output_file = 'preprocessed_reviews.txt'
with open(output_file, 'w', encoding='utf-8') as file:
    for review in preprocessed_reviews:
        file.write(review + '\n')

# Визуализация
review_lengths = [len(review.split()) for review in preprocessed_reviews]
plt.hist(review_lengths, bins=50, color='skyblue', edgecolor='black')
plt.xlabel('Длина отзыва')
plt.ylabel('Частота')
plt.title('Распределение длин отзывов')
plt.show()

from wordcloud import WordCloud
import matplotlib.pyplot as plt

# Сгенерируем облако слов
text = " ".join(preprocessed_reviews)  # Предполагается, что preprocessed_reviews содержит ваш предобработанный текст
wordcloud = WordCloud(width=800, height=400, background_color ='white').generate(text)

# Отобразим облако слов
plt.figure(figsize=(10, 5))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis('off')
plt.show()

import matplotlib.pyplot as plt

# Предполагается, что у вас есть данные об оценках пользователей и длине отзывов
user_ratings = [4, 3, 5, 2, 4, 5, 3, 4, 2, 1]  # Пример оценок пользователей
review_lengths = [20, 50, 30, 40, 25, 60, 35, 45, 55, 10]  # Пример длин отзывов

plt.figure(figsize=(8, 6))
plt.scatter(review_lengths, user_ratings, color='blue', alpha=0.5)  # Создаем диаграмму рассеяния

plt.title('Диаграмма рассеяния: Оценка пользователей vs Длина отзыва')
plt.xlabel('Длина отзыва')
plt.ylabel('Оценка пользователя')
plt.grid(True)
plt.show()